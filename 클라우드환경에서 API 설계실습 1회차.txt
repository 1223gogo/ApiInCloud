과정명 : 클라우드 환경에서의 API 설계 및 구현
API의 변천사

- SOAP : 
	XML 기반
	WSDL(Web Services Description Language)
	XML 파싱이 느리다.
- REST :
	원래 있던 HTTP protocol(GET, PUT, DELETE, POST, HEAD)을 데이터전송에 적합하게 바꾸었다.
	REST interface의 표준이 없다.
RESTful 
	아키텍처의 스타일
	일종의 가이드, 패턴
	기술이 아니다.
	규약들의 집합이다.	
	표준이 없다.
	패턴을 얼마나 준수하냐에 따라 RESTful하다고 한다.

OSI 7 Layer
물데네전 | 세표응

GET, POST
- 웹서버
GET : 주소에 데이터 전송
POST : 헤더에 넣어서 데이터 전송

- REST서버
요청방식
URL + Parameter + (Verb = GET, POST)
CRUD = HTTP Verbs
• Create = POST = INSERT
• Retrieve = GET = SELECT
• Update = PUT = UPDATE
• Delete = DELETE =Delete

REST의 POST데이터는 BODY에 데이터 전송 (HEADER 아님)

REST 서버사용
	ex) Postman 

REST(Representational State Transfer)
웹의 기존 기술을 최대한 활용할 수 있다.

URI에 _ 사용하지 않는다. 잘 안보임

HTTP + JSON > REST Like, RESTish  가벼운 레벨

- RESTful 아키텍쳐 설계규칙 6가지

★ Self-descriptive messages
메시지는 스스로를 설명해야 한다.
향후에 유지보스하면서 서비스를 원활하게 하기 위해서 중요하다.

- 4XX Client errors
	401 인증자체의 문제
	403 권한의 문제

--------------------------------<실습>------------------------------------
IntelliJ
Trial

Spring Web
Spring Data JPA
Rest Repositories
H2 Database

실행하기

spring-boot-starter-data-rest 
REST 로 제공한다. 
localhost:8080으로 가면
{
  "_links" : {
    "profile" : {
      "href" : "http://localhost:8080/profile"
    }
  }
}
나온다.

com.funding.crowd

Lombok
Spring Web
Spring Data JPA
MariaDB Driver

build.gradle 파일에 추가
(Maven Repository 사이트에서 복사하여 사용한다.)








